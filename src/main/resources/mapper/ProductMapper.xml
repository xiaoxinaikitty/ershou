<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuchao.ershou.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.xuchao.ershou.model.entity.Product">
        <id column="product_id" property="productId" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="original_price" property="originalPrice" jdbcType="DECIMAL"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="condition_level" property="conditionLevel" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="view_count" property="viewCount" jdbcType="INTEGER"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        product_id, title, description, price, original_price, category_id, user_id, 
        condition_level, status, location, view_count, created_time, updated_time
    </sql>

    <insert id="insertProduct" parameterType="com.xuchao.ershou.model.entity.Product" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO product (
            title,
            description,
            price,
            original_price,
            category_id,
            user_id,
            condition_level,
            status,
            location,
            view_count,
            created_time
        ) VALUES (
            #{title},
            #{description},
            #{price},
            #{originalPrice},
            #{categoryId},
            #{userId},
            #{conditionLevel},
            #{status},
            #{location},
            #{viewCount},
            CURRENT_TIMESTAMP
        )
    </insert>
    
    <select id="selectProductById" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List" />
        FROM product
        WHERE product_id = #{productId}
    </select>
    
    <update id="updateProduct" parameterType="com.xuchao.ershou.model.entity.Product">
        UPDATE product
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="price != null">price = #{price},</if>
            <if test="originalPrice != null">original_price = #{originalPrice},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="conditionLevel != null">condition_level = #{conditionLevel},</if>
            <if test="status != null">status = #{status},</if>
            <if test="location != null">location = #{location},</if>
            <if test="viewCount != null">view_count = #{viewCount},</if>
            updated_time = CURRENT_TIMESTAMP
        </set>
        WHERE product_id = #{productId}
    </update>
    
    <sql id="Query_Condition">
        <where>
            <if test="query.keyword != null and query.keyword != ''">
                AND p.title LIKE CONCAT('%', #{query.keyword}, '%')
            </if>
            <if test="query.categoryId != null">
                AND p.category_id = #{query.categoryId}
            </if>
            <if test="query.minPrice != null">
                AND p.price >= #{query.minPrice}
            </if>
            <if test="query.maxPrice != null">
                AND p.price &lt;= #{query.maxPrice}
            </if>
            <if test="query.status != null">
                AND p.status = #{query.status}
            </if>
            <if test="query.minConditionLevel != null">
                AND p.condition_level >= #{query.minConditionLevel}
            </if>
            <if test="query.location != null and query.location != ''">
                AND p.location LIKE CONCAT('%', #{query.location}, '%')
            </if>
            <if test="query.sellerId != null">
                AND p.user_id = #{query.sellerId}
            </if>
        </where>
    </sql>
    
    <sql id="Sort_Condition">
        <if test="query.sortField == 'price'">
            <choose>
                <when test="query.sortOrder == 'asc'">
                    ORDER BY price ASC
                </when>
                <otherwise>
                    ORDER BY price DESC
                </otherwise>
            </choose>
        </if>
        <if test="query.sortField == 'time'">
            <choose>
                <when test="query.sortOrder == 'asc'">
                    ORDER BY created_time ASC
                </when>
                <otherwise>
                    ORDER BY created_time DESC
                </otherwise>
            </choose>
        </if>
        <if test="query.sortField == 'view'">
            <choose>
                <when test="query.sortOrder == 'asc'">
                    ORDER BY view_count ASC
                </when>
                <otherwise>
                    ORDER BY view_count DESC
                </otherwise>
            </choose>
        </if>
    </sql>
    
    <select id="selectProductPage" resultType="com.xuchao.ershou.model.vo.ProductPageVO">
        SELECT 
            p.product_id,
            p.title,
            p.price,
            p.original_price,
            p.category_id,
            pc.category_name,
            p.user_id,
            u.username,
            p.condition_level,
            p.location,
            p.view_count,
            p.created_time,
            COALESCE(
                (SELECT image_url FROM product_image WHERE product_id = p.product_id AND is_main = 1 LIMIT 1),
                (SELECT image_url FROM product_image WHERE product_id = p.product_id ORDER BY image_id ASC LIMIT 1)
            ) as mainImageUrl
        FROM 
            product p
        LEFT JOIN 
            product_category pc ON p.category_id = pc.category_id
        LEFT JOIN 
            user u ON p.user_id = u.user_id
        WHERE p.status = #{query.status}
        <if test="query.keyword != null and query.keyword != ''">
            AND p.title LIKE CONCAT('%', #{query.keyword}, '%')
        </if>
        <if test="query.categoryId != null">
            AND p.category_id = #{query.categoryId}
        </if>
        <if test="query.minPrice != null">
            AND p.price >= #{query.minPrice}
        </if>
        <if test="query.maxPrice != null">
            AND p.price &lt;= #{query.maxPrice}
        </if>
        <if test="query.minConditionLevel != null">
            AND p.condition_level >= #{query.minConditionLevel}
        </if>
        <if test="query.location != null and query.location != ''">
            AND p.location LIKE CONCAT('%', #{query.location}, '%')
        </if>
        <if test="query.sellerId != null">
            AND p.user_id = #{query.sellerId}
        </if>
        <include refid="Sort_Condition" />
        LIMIT #{offset}, #{limit}
    </select>
    
    <select id="countProducts" resultType="long">
        SELECT COUNT(1)
        FROM product p
        <include refid="Query_Condition" />
    </select>
    
    <!-- 搜索商品条件 -->
    <sql id="Search_Condition">
        <where>
            <if test="search.status != null">
                AND p.status = #{search.status}
            </if>
            <if test="search.keyword != null and search.keyword != ''">
                AND (
                    p.title LIKE CONCAT('%', #{search.keyword}, '%')
                    OR p.description LIKE CONCAT('%', #{search.keyword}, '%')
                )
            </if>
            <if test="search.categoryId != null">
                AND p.category_id = #{search.categoryId}
            </if>
            <if test="search.minPrice != null">
                AND p.price >= #{search.minPrice}
            </if>
            <if test="search.maxPrice != null">
                AND p.price &lt;= #{search.maxPrice}
            </if>
            <if test="search.minConditionLevel != null">
                AND p.condition_level >= #{search.minConditionLevel}
            </if>
            <if test="search.location != null and search.location != ''">
                AND p.location LIKE CONCAT('%', #{search.location}, '%')
            </if>
        </where>
    </sql>
    
    <!-- 搜索排序条件 -->
    <sql id="Search_Sort_Condition">
        <if test="search.sortField == 'price'">
            <choose>
                <when test="search.sortOrder == 'asc'">
                    ORDER BY p.price ASC
                </when>
                <otherwise>
                    ORDER BY p.price DESC
                </otherwise>
            </choose>
        </if>
        <if test="search.sortField == 'time' or search.sortField == null">
            <choose>
                <when test="search.sortOrder == 'asc'">
                    ORDER BY p.created_time ASC
                </when>
                <otherwise>
                    ORDER BY p.created_time DESC
                </otherwise>
            </choose>
        </if>
        <if test="search.sortField == 'view'">
            <choose>
                <when test="search.sortOrder == 'asc'">
                    ORDER BY p.view_count ASC
                </when>
                <otherwise>
                    ORDER BY p.view_count DESC
                </otherwise>
            </choose>
        </if>
    </sql>
    
    <!-- 搜索商品列表 -->
    <select id="searchProducts" resultType="com.xuchao.ershou.model.vo.ProductPageVO">
        SELECT 
            p.product_id,
            p.title,
            p.price,
            p.original_price,
            p.category_id,
            pc.category_name,
            p.user_id,
            u.username,
            p.condition_level,
            p.location,
            p.view_count,
            p.created_time,
            COALESCE(
                (SELECT image_url FROM product_image WHERE product_id = p.product_id AND is_main = 1 LIMIT 1),
                (SELECT image_url FROM product_image WHERE product_id = p.product_id ORDER BY image_id ASC LIMIT 1)
            ) as mainImageUrl
        FROM 
            product p
        LEFT JOIN 
            product_category pc ON p.category_id = pc.category_id
        LEFT JOIN 
            user u ON p.user_id = u.user_id
        <include refid="Search_Condition" />
        <include refid="Search_Sort_Condition" />
        LIMIT #{offset}, #{limit}
    </select>
    
    <!-- 统计搜索结果数量 -->
    <select id="countSearchProducts" resultType="long">
        SELECT COUNT(1)
        FROM product p
        <include refid="Search_Condition" />
    </select>
</mapper>